name: SAM Build & Deploy

on:
  workflow_call:
    inputs:
      WORKFLOW_ENV:
        description: GitHub workflow environment to be able to access environment level secrets. Expected values - TEST, STAGE, PRODUCTION
        required: true
        type: string
      AWS_REGION:
        description: AWS Region the stack is being deployed to
        required: true
        type: string
      USER_SERVICE_API_URL:
        required: true
        type: string
      DATA_BOUNDARY_SERVICE_API_URL:
        required: true
        type: string
      STACK_NAME:
        type: string
        default: electronic-discovery-service
      TABLE_NAME:
        type: string
        default: electronic-discovery
      BUCKET_NAME:
        type: string
        default: electronic-discovery
      NAME_COLISSION_SUFFIX:
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    name: Build and Deploy SAM Application
    runs-on: ubuntu-latest
    environment: ${{ inputs.WORKFLOW_ENV }}
    steps:
      - uses: actions/checkout@v3
      - name: Configure NPM
        env:
          NPM_ARTIFACTORY_AUTH: ${{ secrets.SCRATCH_ARTIFACTORY_TOKEN }}
        run: |
          npm config set registry https://tylertech.jfrog.io/tylertech/api/npm/npm
          npm config set //tylertech.jfrog.io/tylertech/api/npm/:_auth "$NPM_ARTIFACTORY_AUTH"

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ inputs.AWS_REGION }}
          role-to-assume: ${{ vars.PIPELINE_EXECUTION_ROLE }}
          role-session-name: discovery-deploy
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Replace Variables in samconfig
        run: |
          npm i -g replace-in-files-cli
          replace-in-files --string='{{EnvironmentType}}' --replacement='${{ inputs.WORKFLOW_ENV }}' ./samconfig.ci.toml
          replace-in-files --string='{{SendGridAccountKey}}' --replacement='${{ secrets.SENDGRID_KEY }}' ./samconfig.ci.toml
          replace-in-files --string='{{BoxClientId}}' --replacement='${{ secrets.BOX_CLIENT_ID }}' ./samconfig.ci.toml
          replace-in-files --string='{{BoxClientSecret}}' --replacement='${{ secrets.BOX_CLIENT_SECRET }}' ./samconfig.ci.toml
          replace-in-files --string='{{BoxPublicKeyId}}' --replacement='${{ secrets.BOX_PUBLIC_KEY_ID }}' ./samconfig.ci.toml
          replace-in-files --string='{{BoxPrivateKey}}' --replacement='${{ secrets.BOX_PRIVATE_KEY }}' ./samconfig.ci.toml
          replace-in-files --string='{{BoxPassphrase}}' --replacement='${{ secrets.BOX_PASSPHRASE }}' ./samconfig.ci.toml
          replace-in-files --string='{{BoxEnterpriseId}}' --replacement='${{ secrets.BOX_ENTERPRISE_ID }}' ./samconfig.ci.toml
          replace-in-files --string='{{UserServiceApiUrl}}' --replacement='${{ inputs.USER_SERVICE_API_URL }}' ./samconfig.ci.toml
          replace-in-files --string='{{DataBoundaryServiceApiUrl}}' --replacement='${{ inputs.DATA_BOUNDARY_SERVICE_API_URL }}' ./samconfig.ci.toml
          replace-in-files --string='{{StackName}}' --replacement='${{ inputs.STACK_NAME }}' ./samconfig.ci.toml
          replace-in-files --string='{{TableName}}' --replacement='${{ inputs.TABLE_NAME }}' ./samconfig.ci.toml
          replace-in-files --string='{{BucketName}}' --replacement='${{ inputs.BUCKET_NAME }}' ./samconfig.ci.toml
          replace-in-files --string='{{TestUserSub}}' --replacement='${{ vars.TEST_USER_SUB }}' ./samconfig.ci.toml
          lowerCaseSuffix=$(echo "${{ inputs.NAME_COLISSION_SUFFIX }}" | tr '[:upper:]' '[:lower:]' | tr '-' 'd')
          substringSuffix="${lowerCaseSuffix:0:10}"
          nameCollisionSuffix=",\"NameCollisionSuffix=${substringSuffix}\""
          [ -z "${{ inputs.NAME_COLISSION_SUFFIX }}" ] && replace-in-files --string='{{NameCollisionSuffix}}' --replacement='' ./samconfig.ci.toml || replace-in-files --string='{{NameCollisionSuffix}}' --replacement=${nameCollisionSuffix} ./samconfig.ci.toml
          cat ./samconfig.ci.toml
      - name: SAM Build and Deploy
        run: |
          sam --version
          sam build --config-file samconfig.ci.toml

          sam deploy \
          --config-file samconfig.ci.toml \
          --s3-bucket ${{ vars.ARTIFACTS_BUCKET_NAME }} \
          --no-fail-on-empty-changeset \
          --role-arn ${{ vars.CLOUDFORMATION_EXECUTION_ROLE }}
