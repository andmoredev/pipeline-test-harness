name: Deploy Sandbox
run-name: Deploy ${{ github.event.pull_request.head.ref || github.ref_name }} to Sandbox

on:
  # push:
  pull_request:
    branches:
      - main
  delete:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.ref || github.ref_name }}

env:
  FULL_BRANCH_NAME: ${{ github.event_name == 'workflow_dispatch' && github.ref_name || github.event_name == 'pull_request' && github.head_ref  || github.event_name == 'delete' && github.event.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  get-branch-name:
    name: Get branch name
    runs-on: ubuntu-latest
    outputs:
      BRANCH_NAME: ${{ steps.branch-name.outputs.BRANCH_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract JIRA number from branch name
        run: |
          JIRA_NUMBER=$(echo "$FULL_BRANCH_NAME" | grep -oE 'AM-[0-9]+' || true)

          if [ -z "$JIRA_NUMBER" ]; then
            echo "No JIRA number found, generating random environment name..."
            JIRA_NUMBER="env-$(LC_ALL=C tr -dc 'a-z0-9' < /dev/urandom | head -c $((RANDOM % 5 + 6)))"
          fi

          echo "JIRA number is: $JIRA_NUMBER"
          echo "jira_number=$JIRA_NUMBER" >> $GITHUB_OUTPUT
        id: extract

      - name: Create Branch & Update File
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

          git branch coverage-update-11
          git checkout coverage-update-11

          echo "# Hello World" >> README.md
          git add README.md

          git commit -m "Update Data Model Schema Documentation"
          git push --set-upstream origin coverage-update-11

          git pull

          PR_URL=$(gh pr create --title "Update Code Coverage Reports" --body "Update Code Coverage Reports")
          echo 'hello'
          echo $PR_URL

          # gh pr review --approve "$PR_URL"
          # gh pr merge --auto --merge "$PR_URL"

      # - name: Create Branch & Update File
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git config user.name "GitHub Actions Bot"
      #     git config user.email "<>"

      #     git branch coverage-update-11
      #     git checkout coverage-update-11

      #     echo "# Hello World" >> README.md
      #     git add README.md

      #     git commit -m "Update Data Model Schema Documentation"
      #     git push --set-upstream origin coverage-update-11

      #     git pull

      #     PR_URL=$(gh pr create --title "Update Code Coverage Reports" --body "Update Code Coverage Reports")
      #     echo 'hello'
      #     echo $PR_URL

      #     # gh pr review --approve "$PR_URL"
      #     # gh pr merge --auto --merge "$PR_URL"

      - id: branch-name
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "var 0 $MY_TEST_VAR"
          echo "var 1 --- ${{ github.event.pull_request.head.ref }}"
          echo "var 2 --- ${{ github.ref_name }}"
          echo "var 3 ${{ github.event_name == 'workflow_dispatch' && github.ref_name || github.event_name == 'pull_request' && github.head_ref  || github.event_name == 'delete' && github.event.ref }}"
          echo "var 4 ${{github.event.number}}"
          REF_VALUE=$(echo "${{ github.event.ref || github.ref }}")
          REPLACE_STRING="refs/heads/"
          EMPTY_STRING=""
          BRANCH_NAME=$(echo "PR-${{github.event.number}}")

          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "### Branch Name $BRANCH_NAME" >> $GITHUB_STEP_SUMMARY

  review-and-merge:
    if: ${{ github.actor == 'dependabot[bot]' }}
    uses: ./.github/workflows/dependabot-merge.yaml
    secrets: inherit

  dependabot-cleanup:
    if: ${{ github.actor == 'dependabot[bot]' }}
    needs: [review-and-merge]
    uses: ./.github/workflows/cleanup-sandbox.yaml
    secrets: inherit
